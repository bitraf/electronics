ARM GAS  /tmp/ccwy3PPZ.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_hal_msp.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.HAL_MspInit,"ax",%progbits
  16              		.align	1
  17              		.global	HAL_MspInit
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	HAL_MspInit:
  24              	.LFB37:
  25              		.file 1 "Src/stm32f0xx_hal_msp.c"
   1:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_hal_msp.c **** /**
   3:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   4:Src/stm32f0xx_hal_msp.c ****   * File Name          : stm32f0xx_hal_msp.c
   5:Src/stm32f0xx_hal_msp.c ****   * Description        : This file provides code for the MSP Initialization 
   6:Src/stm32f0xx_hal_msp.c ****   *                      and de-Initialization codes.
   7:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
   8:Src/stm32f0xx_hal_msp.c ****   * This notice applies to any and all portions of this file
   9:Src/stm32f0xx_hal_msp.c ****   * that are not between comment pairs USER CODE BEGIN and
  10:Src/stm32f0xx_hal_msp.c ****   * USER CODE END. Other portions of this file, whether 
  11:Src/stm32f0xx_hal_msp.c ****   * inserted by the user or by software development tools
  12:Src/stm32f0xx_hal_msp.c ****   * are owned by their respective copyright owners.
  13:Src/stm32f0xx_hal_msp.c ****   *
  14:Src/stm32f0xx_hal_msp.c ****   * Copyright (c) 2019 STMicroelectronics International N.V. 
  15:Src/stm32f0xx_hal_msp.c ****   * All rights reserved.
  16:Src/stm32f0xx_hal_msp.c ****   *
  17:Src/stm32f0xx_hal_msp.c ****   * Redistribution and use in source and binary forms, with or without 
  18:Src/stm32f0xx_hal_msp.c ****   * modification, are permitted, provided that the following conditions are met:
  19:Src/stm32f0xx_hal_msp.c ****   *
  20:Src/stm32f0xx_hal_msp.c ****   * 1. Redistribution of source code must retain the above copyright notice, 
  21:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer.
  22:Src/stm32f0xx_hal_msp.c ****   * 2. Redistributions in binary form must reproduce the above copyright notice,
  23:Src/stm32f0xx_hal_msp.c ****   *    this list of conditions and the following disclaimer in the documentation
  24:Src/stm32f0xx_hal_msp.c ****   *    and/or other materials provided with the distribution.
  25:Src/stm32f0xx_hal_msp.c ****   * 3. Neither the name of STMicroelectronics nor the names of other 
  26:Src/stm32f0xx_hal_msp.c ****   *    contributors to this software may be used to endorse or promote products 
  27:Src/stm32f0xx_hal_msp.c ****   *    derived from this software without specific written permission.
  28:Src/stm32f0xx_hal_msp.c ****   * 4. This software, including modifications and/or derivative works of this 
  29:Src/stm32f0xx_hal_msp.c ****   *    software, must execute solely and exclusively on microcontroller or
  30:Src/stm32f0xx_hal_msp.c ****   *    microprocessor devices manufactured by or for STMicroelectronics.
  31:Src/stm32f0xx_hal_msp.c ****   * 5. Redistribution and use of this software other than as permitted under 
  32:Src/stm32f0xx_hal_msp.c ****   *    this license is void and will automatically terminate your rights under 
  33:Src/stm32f0xx_hal_msp.c ****   *    this license. 
ARM GAS  /tmp/ccwy3PPZ.s 			page 2


  34:Src/stm32f0xx_hal_msp.c ****   *
  35:Src/stm32f0xx_hal_msp.c ****   * THIS SOFTWARE IS PROVIDED BY STMICROELECTRONICS AND CONTRIBUTORS "AS IS" 
  36:Src/stm32f0xx_hal_msp.c ****   * AND ANY EXPRESS, IMPLIED OR STATUTORY WARRANTIES, INCLUDING, BUT NOT 
  37:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A 
  38:Src/stm32f0xx_hal_msp.c ****   * PARTICULAR PURPOSE AND NON-INFRINGEMENT OF THIRD PARTY INTELLECTUAL PROPERTY
  39:Src/stm32f0xx_hal_msp.c ****   * RIGHTS ARE DISCLAIMED TO THE FULLEST EXTENT PERMITTED BY LAW. IN NO EVENT 
  40:Src/stm32f0xx_hal_msp.c ****   * SHALL STMICROELECTRONICS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  41:Src/stm32f0xx_hal_msp.c ****   * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  42:Src/stm32f0xx_hal_msp.c ****   * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, 
  43:Src/stm32f0xx_hal_msp.c ****   * OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF 
  44:Src/stm32f0xx_hal_msp.c ****   * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING 
  45:Src/stm32f0xx_hal_msp.c ****   * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  46:Src/stm32f0xx_hal_msp.c ****   * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  47:Src/stm32f0xx_hal_msp.c ****   *
  48:Src/stm32f0xx_hal_msp.c ****   ******************************************************************************
  49:Src/stm32f0xx_hal_msp.c ****   */
  50:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Header */
  51:Src/stm32f0xx_hal_msp.c **** 
  52:Src/stm32f0xx_hal_msp.c **** /* Includes ------------------------------------------------------------------*/
  53:Src/stm32f0xx_hal_msp.c **** #include "main.h"
  54:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Includes */
  55:Src/stm32f0xx_hal_msp.c **** 
  56:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Includes */
  57:Src/stm32f0xx_hal_msp.c **** 
  58:Src/stm32f0xx_hal_msp.c **** /* Private typedef -----------------------------------------------------------*/
  59:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN TD */
  60:Src/stm32f0xx_hal_msp.c **** 
  61:Src/stm32f0xx_hal_msp.c **** /* USER CODE END TD */
  62:Src/stm32f0xx_hal_msp.c **** 
  63:Src/stm32f0xx_hal_msp.c **** /* Private define ------------------------------------------------------------*/
  64:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Define */
  65:Src/stm32f0xx_hal_msp.c ****  
  66:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Define */
  67:Src/stm32f0xx_hal_msp.c **** 
  68:Src/stm32f0xx_hal_msp.c **** /* Private macro -------------------------------------------------------------*/
  69:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN Macro */
  70:Src/stm32f0xx_hal_msp.c **** 
  71:Src/stm32f0xx_hal_msp.c **** /* USER CODE END Macro */
  72:Src/stm32f0xx_hal_msp.c **** 
  73:Src/stm32f0xx_hal_msp.c **** /* Private variables ---------------------------------------------------------*/
  74:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PV */
  75:Src/stm32f0xx_hal_msp.c **** 
  76:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PV */
  77:Src/stm32f0xx_hal_msp.c **** 
  78:Src/stm32f0xx_hal_msp.c **** /* Private function prototypes -----------------------------------------------*/
  79:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN PFP */
  80:Src/stm32f0xx_hal_msp.c **** 
  81:Src/stm32f0xx_hal_msp.c **** /* USER CODE END PFP */
  82:Src/stm32f0xx_hal_msp.c **** 
  83:Src/stm32f0xx_hal_msp.c **** /* External functions --------------------------------------------------------*/
  84:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN ExternalFunctions */
  85:Src/stm32f0xx_hal_msp.c **** 
  86:Src/stm32f0xx_hal_msp.c **** /* USER CODE END ExternalFunctions */
  87:Src/stm32f0xx_hal_msp.c **** 
  88:Src/stm32f0xx_hal_msp.c **** /* USER CODE BEGIN 0 */
  89:Src/stm32f0xx_hal_msp.c **** 
  90:Src/stm32f0xx_hal_msp.c **** /* USER CODE END 0 */
ARM GAS  /tmp/ccwy3PPZ.s 			page 3


  91:Src/stm32f0xx_hal_msp.c **** /**
  92:Src/stm32f0xx_hal_msp.c ****   * Initializes the Global MSP.
  93:Src/stm32f0xx_hal_msp.c ****   */
  94:Src/stm32f0xx_hal_msp.c **** void HAL_MspInit(void)
  95:Src/stm32f0xx_hal_msp.c **** {
  26              		.loc 1 95 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              	.LBB2:
  96:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 0 */
  97:Src/stm32f0xx_hal_msp.c **** 
  98:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 0 */
  99:Src/stm32f0xx_hal_msp.c **** 
 100:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
  35              		.loc 1 100 0
  36 0002 0A4B     		ldr	r3, .L2
  37 0004 9969     		ldr	r1, [r3, #24]
  38 0006 0122     		movs	r2, #1
  39 0008 1143     		orrs	r1, r2
  40 000a 9961     		str	r1, [r3, #24]
  41 000c 9969     		ldr	r1, [r3, #24]
  42 000e 0A40     		ands	r2, r1
  43 0010 0092     		str	r2, [sp]
  44 0012 009A     		ldr	r2, [sp]
  45              	.LBE2:
  46              	.LBB3:
 101:Src/stm32f0xx_hal_msp.c ****   __HAL_RCC_PWR_CLK_ENABLE();
  47              		.loc 1 101 0
  48 0014 DA69     		ldr	r2, [r3, #28]
  49 0016 8021     		movs	r1, #128
  50 0018 4905     		lsls	r1, r1, #21
  51 001a 0A43     		orrs	r2, r1
  52 001c DA61     		str	r2, [r3, #28]
  53 001e DB69     		ldr	r3, [r3, #28]
  54 0020 0B40     		ands	r3, r1
  55 0022 0193     		str	r3, [sp, #4]
  56 0024 019B     		ldr	r3, [sp, #4]
  57              	.LBE3:
 102:Src/stm32f0xx_hal_msp.c **** 
 103:Src/stm32f0xx_hal_msp.c ****   /* System interrupt init*/
 104:Src/stm32f0xx_hal_msp.c **** 
 105:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN MspInit 1 */
 106:Src/stm32f0xx_hal_msp.c **** 
 107:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END MspInit 1 */
 108:Src/stm32f0xx_hal_msp.c **** }
  58              		.loc 1 108 0
  59 0026 02B0     		add	sp, sp, #8
  60              		@ sp needed
  61 0028 7047     		bx	lr
  62              	.L3:
  63 002a C046     		.align	2
  64              	.L2:
ARM GAS  /tmp/ccwy3PPZ.s 			page 4


  65 002c 00100240 		.word	1073876992
  66              		.cfi_endproc
  67              	.LFE37:
  69              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
  70              		.align	1
  71              		.global	HAL_TIM_Base_MspInit
  72              		.syntax unified
  73              		.code	16
  74              		.thumb_func
  75              		.fpu softvfp
  77              	HAL_TIM_Base_MspInit:
  78              	.LFB38:
 109:Src/stm32f0xx_hal_msp.c **** 
 110:Src/stm32f0xx_hal_msp.c **** /**
 111:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP Initialization
 112:Src/stm32f0xx_hal_msp.c **** * This function configures the hardware resources used in this example
 113:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 114:Src/stm32f0xx_hal_msp.c **** * @retval None
 115:Src/stm32f0xx_hal_msp.c **** */
 116:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
 117:Src/stm32f0xx_hal_msp.c **** {
  79              		.loc 1 117 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 16
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              	.LVL0:
  84 0000 00B5     		push	{lr}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 4
  87              		.cfi_offset 14, -4
  88 0002 85B0     		sub	sp, sp, #20
  89              	.LCFI2:
  90              		.cfi_def_cfa_offset 24
 118:Src/stm32f0xx_hal_msp.c **** 
 119:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM3)
  91              		.loc 1 119 0
  92 0004 0368     		ldr	r3, [r0]
  93 0006 214A     		ldr	r2, .L11
  94 0008 9342     		cmp	r3, r2
  95 000a 07D0     		beq	.L8
 120:Src/stm32f0xx_hal_msp.c ****   {
 121:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 0 */
 122:Src/stm32f0xx_hal_msp.c **** 
 123:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 0 */
 124:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 125:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_ENABLE();
 126:Src/stm32f0xx_hal_msp.c ****     /* TIM3 interrupt Init */
 127:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 128:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 129:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 130:Src/stm32f0xx_hal_msp.c **** 
 131:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspInit 1 */
 132:Src/stm32f0xx_hal_msp.c ****   }
 133:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM14)
  96              		.loc 1 133 0
  97 000c 204A     		ldr	r2, .L11+4
  98 000e 9342     		cmp	r3, r2
ARM GAS  /tmp/ccwy3PPZ.s 			page 5


  99 0010 16D0     		beq	.L9
 134:Src/stm32f0xx_hal_msp.c ****   {
 135:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspInit 0 */
 136:Src/stm32f0xx_hal_msp.c **** 
 137:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM14_MspInit 0 */
 138:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 139:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM14_CLK_ENABLE();
 140:Src/stm32f0xx_hal_msp.c ****     /* TIM14 interrupt Init */
 141:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM14_IRQn, 0, 0);
 142:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM14_IRQn);
 143:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 144:Src/stm32f0xx_hal_msp.c **** 
 145:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM14_MspInit 1 */
 146:Src/stm32f0xx_hal_msp.c ****   }
 147:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM16)
 100              		.loc 1 147 0
 101 0012 204A     		ldr	r2, .L11+8
 102 0014 9342     		cmp	r3, r2
 103 0016 26D0     		beq	.L10
 104              	.LVL1:
 105              	.L4:
 148:Src/stm32f0xx_hal_msp.c ****   {
 149:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 0 */
 150:Src/stm32f0xx_hal_msp.c **** 
 151:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM16_MspInit 0 */
 152:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock enable */
 153:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM16_CLK_ENABLE();
 154:Src/stm32f0xx_hal_msp.c ****     /* TIM16 interrupt Init */
 155:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_SetPriority(TIM16_IRQn, 0, 0);
 156:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM16_IRQn);
 157:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 158:Src/stm32f0xx_hal_msp.c **** 
 159:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM16_MspInit 1 */
 160:Src/stm32f0xx_hal_msp.c ****   }
 161:Src/stm32f0xx_hal_msp.c **** 
 162:Src/stm32f0xx_hal_msp.c **** }
 106              		.loc 1 162 0
 107 0018 05B0     		add	sp, sp, #20
 108              		@ sp needed
 109 001a 00BD     		pop	{pc}
 110              	.LVL2:
 111              	.L8:
 112              	.LBB4:
 125:Src/stm32f0xx_hal_msp.c ****     /* TIM3 interrupt Init */
 113              		.loc 1 125 0
 114 001c 1E4A     		ldr	r2, .L11+12
 115 001e D169     		ldr	r1, [r2, #28]
 116 0020 0223     		movs	r3, #2
 117 0022 1943     		orrs	r1, r3
 118 0024 D161     		str	r1, [r2, #28]
 119 0026 D269     		ldr	r2, [r2, #28]
 120 0028 1340     		ands	r3, r2
 121 002a 0193     		str	r3, [sp, #4]
 122 002c 019B     		ldr	r3, [sp, #4]
 123              	.LBE4:
 127:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM3_IRQn);
 124              		.loc 1 127 0
ARM GAS  /tmp/ccwy3PPZ.s 			page 6


 125 002e 0022     		movs	r2, #0
 126 0030 0021     		movs	r1, #0
 127 0032 1020     		movs	r0, #16
 128              	.LVL3:
 129 0034 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 130              	.LVL4:
 128:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspInit 1 */
 131              		.loc 1 128 0
 132 0038 1020     		movs	r0, #16
 133 003a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 134              	.LVL5:
 135 003e EBE7     		b	.L4
 136              	.LVL6:
 137              	.L9:
 138              	.LBB5:
 139:Src/stm32f0xx_hal_msp.c ****     /* TIM14 interrupt Init */
 139              		.loc 1 139 0
 140 0040 154A     		ldr	r2, .L11+12
 141 0042 D169     		ldr	r1, [r2, #28]
 142 0044 8020     		movs	r0, #128
 143              	.LVL7:
 144 0046 4000     		lsls	r0, r0, #1
 145 0048 0143     		orrs	r1, r0
 146 004a D161     		str	r1, [r2, #28]
 147 004c D369     		ldr	r3, [r2, #28]
 148 004e 0340     		ands	r3, r0
 149 0050 0293     		str	r3, [sp, #8]
 150 0052 029B     		ldr	r3, [sp, #8]
 151              	.LBE5:
 141:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM14_IRQn);
 152              		.loc 1 141 0
 153 0054 0022     		movs	r2, #0
 154 0056 0021     		movs	r1, #0
 155 0058 ED38     		subs	r0, r0, #237
 156 005a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 157              	.LVL8:
 142:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspInit 1 */
 158              		.loc 1 142 0
 159 005e 1320     		movs	r0, #19
 160 0060 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 161              	.LVL9:
 162 0064 D8E7     		b	.L4
 163              	.LVL10:
 164              	.L10:
 165              	.LBB6:
 153:Src/stm32f0xx_hal_msp.c ****     /* TIM16 interrupt Init */
 166              		.loc 1 153 0
 167 0066 0C4A     		ldr	r2, .L11+12
 168 0068 9169     		ldr	r1, [r2, #24]
 169 006a 8020     		movs	r0, #128
 170              	.LVL11:
 171 006c 8002     		lsls	r0, r0, #10
 172 006e 0143     		orrs	r1, r0
 173 0070 9161     		str	r1, [r2, #24]
 174 0072 9369     		ldr	r3, [r2, #24]
 175 0074 0340     		ands	r3, r0
 176 0076 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccwy3PPZ.s 			page 7


 177 0078 039B     		ldr	r3, [sp, #12]
 178              	.LBE6:
 155:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_EnableIRQ(TIM16_IRQn);
 179              		.loc 1 155 0
 180 007a 0022     		movs	r2, #0
 181 007c 0021     		movs	r1, #0
 182 007e 1520     		movs	r0, #21
 183 0080 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 184              	.LVL12:
 156:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspInit 1 */
 185              		.loc 1 156 0
 186 0084 1520     		movs	r0, #21
 187 0086 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 188              	.LVL13:
 189              		.loc 1 162 0
 190 008a C5E7     		b	.L4
 191              	.L12:
 192              		.align	2
 193              	.L11:
 194 008c 00040040 		.word	1073742848
 195 0090 00200040 		.word	1073750016
 196 0094 00440140 		.word	1073824768
 197 0098 00100240 		.word	1073876992
 198              		.cfi_endproc
 199              	.LFE38:
 201              		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 202              		.align	1
 203              		.global	HAL_TIM_Base_MspDeInit
 204              		.syntax unified
 205              		.code	16
 206              		.thumb_func
 207              		.fpu softvfp
 209              	HAL_TIM_Base_MspDeInit:
 210              	.LFB39:
 163:Src/stm32f0xx_hal_msp.c **** 
 164:Src/stm32f0xx_hal_msp.c **** /**
 165:Src/stm32f0xx_hal_msp.c **** * @brief TIM_Base MSP De-Initialization
 166:Src/stm32f0xx_hal_msp.c **** * This function freeze the hardware resources used in this example
 167:Src/stm32f0xx_hal_msp.c **** * @param htim_base: TIM_Base handle pointer
 168:Src/stm32f0xx_hal_msp.c **** * @retval None
 169:Src/stm32f0xx_hal_msp.c **** */
 170:Src/stm32f0xx_hal_msp.c **** 
 171:Src/stm32f0xx_hal_msp.c **** void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef* htim_base)
 172:Src/stm32f0xx_hal_msp.c **** {
 211              		.loc 1 172 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              	.LVL14:
 216 0000 10B5     		push	{r4, lr}
 217              	.LCFI3:
 218              		.cfi_def_cfa_offset 8
 219              		.cfi_offset 4, -8
 220              		.cfi_offset 14, -4
 173:Src/stm32f0xx_hal_msp.c **** 
 174:Src/stm32f0xx_hal_msp.c ****   if(htim_base->Instance==TIM3)
 221              		.loc 1 174 0
ARM GAS  /tmp/ccwy3PPZ.s 			page 8


 222 0002 0368     		ldr	r3, [r0]
 223 0004 124A     		ldr	r2, .L20
 224 0006 9342     		cmp	r3, r2
 225 0008 06D0     		beq	.L17
 175:Src/stm32f0xx_hal_msp.c ****   {
 176:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 0 */
 177:Src/stm32f0xx_hal_msp.c **** 
 178:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 0 */
 179:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 180:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM3_CLK_DISABLE();
 181:Src/stm32f0xx_hal_msp.c **** 
 182:Src/stm32f0xx_hal_msp.c ****     /* TIM3 interrupt DeInit */
 183:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM3_IRQn);
 184:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 185:Src/stm32f0xx_hal_msp.c **** 
 186:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM3_MspDeInit 1 */
 187:Src/stm32f0xx_hal_msp.c ****   }
 188:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM14)
 226              		.loc 1 188 0
 227 000a 124A     		ldr	r2, .L20+4
 228 000c 9342     		cmp	r3, r2
 229 000e 0CD0     		beq	.L18
 189:Src/stm32f0xx_hal_msp.c ****   {
 190:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspDeInit 0 */
 191:Src/stm32f0xx_hal_msp.c **** 
 192:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM14_MspDeInit 0 */
 193:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 194:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM14_CLK_DISABLE();
 195:Src/stm32f0xx_hal_msp.c **** 
 196:Src/stm32f0xx_hal_msp.c ****     /* TIM14 interrupt DeInit */
 197:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM14_IRQn);
 198:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 199:Src/stm32f0xx_hal_msp.c **** 
 200:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM14_MspDeInit 1 */
 201:Src/stm32f0xx_hal_msp.c ****   }
 202:Src/stm32f0xx_hal_msp.c ****   else if(htim_base->Instance==TIM16)
 230              		.loc 1 202 0
 231 0010 114A     		ldr	r2, .L20+8
 232 0012 9342     		cmp	r3, r2
 233 0014 12D0     		beq	.L19
 234              	.LVL15:
 235              	.L13:
 203:Src/stm32f0xx_hal_msp.c ****   {
 204:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 0 */
 205:Src/stm32f0xx_hal_msp.c **** 
 206:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM16_MspDeInit 0 */
 207:Src/stm32f0xx_hal_msp.c ****     /* Peripheral clock disable */
 208:Src/stm32f0xx_hal_msp.c ****     __HAL_RCC_TIM16_CLK_DISABLE();
 209:Src/stm32f0xx_hal_msp.c **** 
 210:Src/stm32f0xx_hal_msp.c ****     /* TIM16 interrupt DeInit */
 211:Src/stm32f0xx_hal_msp.c ****     HAL_NVIC_DisableIRQ(TIM16_IRQn);
 212:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 213:Src/stm32f0xx_hal_msp.c **** 
 214:Src/stm32f0xx_hal_msp.c ****   /* USER CODE END TIM16_MspDeInit 1 */
 215:Src/stm32f0xx_hal_msp.c ****   }
 216:Src/stm32f0xx_hal_msp.c **** 
 217:Src/stm32f0xx_hal_msp.c **** }
ARM GAS  /tmp/ccwy3PPZ.s 			page 9


 236              		.loc 1 217 0
 237              		@ sp needed
 238 0016 10BD     		pop	{r4, pc}
 239              	.LVL16:
 240              	.L17:
 180:Src/stm32f0xx_hal_msp.c **** 
 241              		.loc 1 180 0
 242 0018 104A     		ldr	r2, .L20+12
 243 001a D369     		ldr	r3, [r2, #28]
 244 001c 0221     		movs	r1, #2
 245 001e 8B43     		bics	r3, r1
 246 0020 D361     		str	r3, [r2, #28]
 183:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM3_MspDeInit 1 */
 247              		.loc 1 183 0
 248 0022 1020     		movs	r0, #16
 249              	.LVL17:
 250 0024 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 251              	.LVL18:
 252 0028 F5E7     		b	.L13
 253              	.LVL19:
 254              	.L18:
 194:Src/stm32f0xx_hal_msp.c **** 
 255              		.loc 1 194 0
 256 002a 0C4A     		ldr	r2, .L20+12
 257 002c D369     		ldr	r3, [r2, #28]
 258 002e 0C49     		ldr	r1, .L20+16
 259 0030 0B40     		ands	r3, r1
 260 0032 D361     		str	r3, [r2, #28]
 197:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM14_MspDeInit 1 */
 261              		.loc 1 197 0
 262 0034 1320     		movs	r0, #19
 263              	.LVL20:
 264 0036 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 265              	.LVL21:
 266 003a ECE7     		b	.L13
 267              	.LVL22:
 268              	.L19:
 208:Src/stm32f0xx_hal_msp.c **** 
 269              		.loc 1 208 0
 270 003c 074A     		ldr	r2, .L20+12
 271 003e 9369     		ldr	r3, [r2, #24]
 272 0040 0849     		ldr	r1, .L20+20
 273 0042 0B40     		ands	r3, r1
 274 0044 9361     		str	r3, [r2, #24]
 211:Src/stm32f0xx_hal_msp.c ****   /* USER CODE BEGIN TIM16_MspDeInit 1 */
 275              		.loc 1 211 0
 276 0046 1520     		movs	r0, #21
 277              	.LVL23:
 278 0048 FFF7FEFF 		bl	HAL_NVIC_DisableIRQ
 279              	.LVL24:
 280              		.loc 1 217 0
 281 004c E3E7     		b	.L13
 282              	.L21:
 283 004e C046     		.align	2
 284              	.L20:
 285 0050 00040040 		.word	1073742848
 286 0054 00200040 		.word	1073750016
ARM GAS  /tmp/ccwy3PPZ.s 			page 10


 287 0058 00440140 		.word	1073824768
 288 005c 00100240 		.word	1073876992
 289 0060 FFFEFFFF 		.word	-257
 290 0064 FFFFFDFF 		.word	-131073
 291              		.cfi_endproc
 292              	.LFE39:
 294              		.comm	allow_buzzer,1,1
 295              		.text
 296              	.Letext0:
 297              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 298              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 299              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 300              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 301              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 302              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 303              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 304              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 305              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 306              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 307              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 308              		.file 13 "Inc/main.h"
 309              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_cortex.h"
ARM GAS  /tmp/ccwy3PPZ.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_hal_msp.c
     /tmp/ccwy3PPZ.s:16     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccwy3PPZ.s:23     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccwy3PPZ.s:65     .text.HAL_MspInit:000000000000002c $d
     /tmp/ccwy3PPZ.s:70     .text.HAL_TIM_Base_MspInit:0000000000000000 $t
     /tmp/ccwy3PPZ.s:77     .text.HAL_TIM_Base_MspInit:0000000000000000 HAL_TIM_Base_MspInit
     /tmp/ccwy3PPZ.s:194    .text.HAL_TIM_Base_MspInit:000000000000008c $d
     /tmp/ccwy3PPZ.s:202    .text.HAL_TIM_Base_MspDeInit:0000000000000000 $t
     /tmp/ccwy3PPZ.s:209    .text.HAL_TIM_Base_MspDeInit:0000000000000000 HAL_TIM_Base_MspDeInit
     /tmp/ccwy3PPZ.s:285    .text.HAL_TIM_Base_MspDeInit:0000000000000050 $d
                            *COM*:0000000000000001 allow_buzzer

UNDEFINED SYMBOLS
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_NVIC_DisableIRQ

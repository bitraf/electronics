ARM GAS  /tmp/cchibEtC.s 			page 1


   1              		.cpu cortex-m0
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.syntax unified
  19              		.code	16
  20              		.thumb_func
  21              		.fpu softvfp
  23              	NMI_Handler:
  24              	.LFB37:
  25              		.file 1 "Src/stm32f0xx_it.c"
   1:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f0xx_it.c **** /**
   3:Src/stm32f0xx_it.c ****   ******************************************************************************
   4:Src/stm32f0xx_it.c ****   * @file    stm32f0xx_it.c
   5:Src/stm32f0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f0xx_it.c ****   ******************************************************************************
   7:Src/stm32f0xx_it.c ****   *
   8:Src/stm32f0xx_it.c ****   * COPYRIGHT(c) 2019 STMicroelectronics
   9:Src/stm32f0xx_it.c ****   *
  10:Src/stm32f0xx_it.c ****   * Redistribution and use in source and binary forms, with or without modification,
  11:Src/stm32f0xx_it.c ****   * are permitted provided that the following conditions are met:
  12:Src/stm32f0xx_it.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  13:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer.
  14:Src/stm32f0xx_it.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  15:Src/stm32f0xx_it.c ****   *      this list of conditions and the following disclaimer in the documentation
  16:Src/stm32f0xx_it.c ****   *      and/or other materials provided with the distribution.
  17:Src/stm32f0xx_it.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  18:Src/stm32f0xx_it.c ****   *      may be used to endorse or promote products derived from this software
  19:Src/stm32f0xx_it.c ****   *      without specific prior written permission.
  20:Src/stm32f0xx_it.c ****   *
  21:Src/stm32f0xx_it.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Src/stm32f0xx_it.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Src/stm32f0xx_it.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  24:Src/stm32f0xx_it.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  25:Src/stm32f0xx_it.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  26:Src/stm32f0xx_it.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  27:Src/stm32f0xx_it.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  28:Src/stm32f0xx_it.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  29:Src/stm32f0xx_it.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  30:Src/stm32f0xx_it.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  31:Src/stm32f0xx_it.c ****   *
  32:Src/stm32f0xx_it.c ****   ******************************************************************************
  33:Src/stm32f0xx_it.c ****   */
ARM GAS  /tmp/cchibEtC.s 			page 2


  34:Src/stm32f0xx_it.c **** /* USER CODE END Header */
  35:Src/stm32f0xx_it.c **** 
  36:Src/stm32f0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  37:Src/stm32f0xx_it.c **** #include "main.h"
  38:Src/stm32f0xx_it.c **** #include "stm32f0xx_it.h"
  39:Src/stm32f0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  40:Src/stm32f0xx_it.c **** /* USER CODE BEGIN Includes */
  41:Src/stm32f0xx_it.c **** /* USER CODE END Includes */
  42:Src/stm32f0xx_it.c **** 
  43:Src/stm32f0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  44:Src/stm32f0xx_it.c **** /* USER CODE BEGIN TD */
  45:Src/stm32f0xx_it.c **** 
  46:Src/stm32f0xx_it.c **** /* USER CODE END TD */
  47:Src/stm32f0xx_it.c **** 
  48:Src/stm32f0xx_it.c **** /* Private define ------------------------------------------------------------*/
  49:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PD */
  50:Src/stm32f0xx_it.c ****  
  51:Src/stm32f0xx_it.c **** /* USER CODE END PD */
  52:Src/stm32f0xx_it.c **** 
  53:Src/stm32f0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  54:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PM */
  55:Src/stm32f0xx_it.c **** 
  56:Src/stm32f0xx_it.c **** /* USER CODE END PM */
  57:Src/stm32f0xx_it.c **** 
  58:Src/stm32f0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  59:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PV */
  60:Src/stm32f0xx_it.c **** 
  61:Src/stm32f0xx_it.c **** /* USER CODE END PV */
  62:Src/stm32f0xx_it.c **** 
  63:Src/stm32f0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  64:Src/stm32f0xx_it.c **** /* USER CODE BEGIN PFP */
  65:Src/stm32f0xx_it.c **** 
  66:Src/stm32f0xx_it.c **** /* USER CODE END PFP */
  67:Src/stm32f0xx_it.c **** 
  68:Src/stm32f0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  69:Src/stm32f0xx_it.c **** /* USER CODE BEGIN 0 */
  70:Src/stm32f0xx_it.c **** 
  71:Src/stm32f0xx_it.c **** /* USER CODE END 0 */
  72:Src/stm32f0xx_it.c **** 
  73:Src/stm32f0xx_it.c **** /* External variables --------------------------------------------------------*/
  74:Src/stm32f0xx_it.c **** extern PCD_HandleTypeDef hpcd_USB_FS;
  75:Src/stm32f0xx_it.c **** extern TIM_HandleTypeDef htim3;
  76:Src/stm32f0xx_it.c **** /* USER CODE BEGIN EV */
  77:Src/stm32f0xx_it.c **** 
  78:Src/stm32f0xx_it.c **** /* USER CODE END EV */
  79:Src/stm32f0xx_it.c **** 
  80:Src/stm32f0xx_it.c **** /******************************************************************************/
  81:Src/stm32f0xx_it.c **** /*           Cortex-M0 Processor Interruption and Exception Handlers          */ 
  82:Src/stm32f0xx_it.c **** /******************************************************************************/
  83:Src/stm32f0xx_it.c **** /**
  84:Src/stm32f0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  85:Src/stm32f0xx_it.c ****   */
  86:Src/stm32f0xx_it.c **** void NMI_Handler(void)
  87:Src/stm32f0xx_it.c **** {
  26              		.loc 1 87 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cchibEtC.s 			page 3


  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  88:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  89:Src/stm32f0xx_it.c **** 
  90:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  91:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  92:Src/stm32f0xx_it.c **** 
  93:Src/stm32f0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  94:Src/stm32f0xx_it.c **** }
  31              		.loc 1 94 0
  32              		@ sp needed
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE37:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.code	16
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB38:
  95:Src/stm32f0xx_it.c **** 
  96:Src/stm32f0xx_it.c **** /**
  97:Src/stm32f0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  98:Src/stm32f0xx_it.c ****   */
  99:Src/stm32f0xx_it.c **** void HardFault_Handler(void)
 100:Src/stm32f0xx_it.c **** {
  47              		.loc 1 100 0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52              		@ link register save eliminated.
  53              	.L3:
  54 0000 FEE7     		b	.L3
  55              		.cfi_endproc
  56              	.LFE38:
  58              		.section	.text.SVC_Handler,"ax",%progbits
  59              		.align	1
  60              		.global	SVC_Handler
  61              		.syntax unified
  62              		.code	16
  63              		.thumb_func
  64              		.fpu softvfp
  66              	SVC_Handler:
  67              	.LFB39:
 101:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
 102:Src/stm32f0xx_it.c **** 
 103:Src/stm32f0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
 104:Src/stm32f0xx_it.c ****   while (1)
 105:Src/stm32f0xx_it.c ****   {
 106:Src/stm32f0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
 107:Src/stm32f0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
 108:Src/stm32f0xx_it.c ****   }
 109:Src/stm32f0xx_it.c **** }
ARM GAS  /tmp/cchibEtC.s 			page 4


 110:Src/stm32f0xx_it.c **** 
 111:Src/stm32f0xx_it.c **** /**
 112:Src/stm32f0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 113:Src/stm32f0xx_it.c ****   */
 114:Src/stm32f0xx_it.c **** void SVC_Handler(void)
 115:Src/stm32f0xx_it.c **** {
  68              		.loc 1 115 0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		@ link register save eliminated.
 116:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 117:Src/stm32f0xx_it.c **** 
 118:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 119:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 120:Src/stm32f0xx_it.c **** 
 121:Src/stm32f0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 122:Src/stm32f0xx_it.c **** }
  73              		.loc 1 122 0
  74              		@ sp needed
  75 0000 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE39:
  79              		.section	.text.PendSV_Handler,"ax",%progbits
  80              		.align	1
  81              		.global	PendSV_Handler
  82              		.syntax unified
  83              		.code	16
  84              		.thumb_func
  85              		.fpu softvfp
  87              	PendSV_Handler:
  88              	.LFB40:
 123:Src/stm32f0xx_it.c **** 
 124:Src/stm32f0xx_it.c **** /**
 125:Src/stm32f0xx_it.c ****   * @brief This function handles Pendable request for system service.
 126:Src/stm32f0xx_it.c ****   */
 127:Src/stm32f0xx_it.c **** void PendSV_Handler(void)
 128:Src/stm32f0xx_it.c **** {
  89              		.loc 1 128 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 0, uses_anonymous_args = 0
  93              		@ link register save eliminated.
 129:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 130:Src/stm32f0xx_it.c **** 
 131:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 132:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 133:Src/stm32f0xx_it.c **** 
 134:Src/stm32f0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 135:Src/stm32f0xx_it.c **** }
  94              		.loc 1 135 0
  95              		@ sp needed
  96 0000 7047     		bx	lr
  97              		.cfi_endproc
  98              	.LFE40:
 100              		.section	.text.SysTick_Handler,"ax",%progbits
 101              		.align	1
ARM GAS  /tmp/cchibEtC.s 			page 5


 102              		.global	SysTick_Handler
 103              		.syntax unified
 104              		.code	16
 105              		.thumb_func
 106              		.fpu softvfp
 108              	SysTick_Handler:
 109              	.LFB41:
 136:Src/stm32f0xx_it.c **** 
 137:Src/stm32f0xx_it.c **** /**
 138:Src/stm32f0xx_it.c ****   * @brief This function handles System tick timer.
 139:Src/stm32f0xx_it.c ****   */
 140:Src/stm32f0xx_it.c **** void SysTick_Handler(void)
 141:Src/stm32f0xx_it.c **** {
 110              		.loc 1 141 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114 0000 10B5     		push	{r4, lr}
 115              	.LCFI0:
 116              		.cfi_def_cfa_offset 8
 117              		.cfi_offset 4, -8
 118              		.cfi_offset 14, -4
 142:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 143:Src/stm32f0xx_it.c **** 
 144:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 145:Src/stm32f0xx_it.c ****   HAL_IncTick();
 119              		.loc 1 145 0
 120 0002 FFF7FEFF 		bl	HAL_IncTick
 121              	.LVL0:
 146:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 147:Src/stm32f0xx_it.c **** 
 148:Src/stm32f0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 149:Src/stm32f0xx_it.c **** }
 122              		.loc 1 149 0
 123              		@ sp needed
 124 0006 10BD     		pop	{r4, pc}
 125              		.cfi_endproc
 126              	.LFE41:
 128              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 129              		.align	1
 130              		.global	TIM3_IRQHandler
 131              		.syntax unified
 132              		.code	16
 133              		.thumb_func
 134              		.fpu softvfp
 136              	TIM3_IRQHandler:
 137              	.LFB42:
 150:Src/stm32f0xx_it.c **** 
 151:Src/stm32f0xx_it.c **** /******************************************************************************/
 152:Src/stm32f0xx_it.c **** /* STM32F0xx Peripheral Interrupt Handlers                                    */
 153:Src/stm32f0xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 154:Src/stm32f0xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 155:Src/stm32f0xx_it.c **** /* please refer to the startup file (startup_stm32f0xx.s).                    */
 156:Src/stm32f0xx_it.c **** /******************************************************************************/
 157:Src/stm32f0xx_it.c **** 
 158:Src/stm32f0xx_it.c **** /**
 159:Src/stm32f0xx_it.c ****   * @brief This function handles TIM3 global interrupt.
ARM GAS  /tmp/cchibEtC.s 			page 6


 160:Src/stm32f0xx_it.c ****   */
 161:Src/stm32f0xx_it.c **** void TIM3_IRQHandler(void)
 162:Src/stm32f0xx_it.c **** {
 138              		.loc 1 162 0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
 142 0000 10B5     		push	{r4, lr}
 143              	.LCFI1:
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 163:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 164:Src/stm32f0xx_it.c **** 
 165:Src/stm32f0xx_it.c ****   /* USER CODE END TIM3_IRQn 0 */
 166:Src/stm32f0xx_it.c ****   HAL_TIM_IRQHandler(&htim3);
 147              		.loc 1 166 0
 148 0002 0348     		ldr	r0, .L8
 149 0004 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 150              	.LVL1:
 167:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 168:Src/stm32f0xx_it.c ****   
 169:Src/stm32f0xx_it.c ****   pixel();
 151              		.loc 1 169 0
 152 0008 FFF7FEFF 		bl	pixel
 153              	.LVL2:
 170:Src/stm32f0xx_it.c ****   
 171:Src/stm32f0xx_it.c ****   /* USER CODE END TIM3_IRQn 1 */
 172:Src/stm32f0xx_it.c **** }
 154              		.loc 1 172 0
 155              		@ sp needed
 156 000c 10BD     		pop	{r4, pc}
 157              	.L9:
 158 000e C046     		.align	2
 159              	.L8:
 160 0010 00000000 		.word	htim3
 161              		.cfi_endproc
 162              	.LFE42:
 164              		.section	.text.USB_IRQHandler,"ax",%progbits
 165              		.align	1
 166              		.global	USB_IRQHandler
 167              		.syntax unified
 168              		.code	16
 169              		.thumb_func
 170              		.fpu softvfp
 172              	USB_IRQHandler:
 173              	.LFB43:
 173:Src/stm32f0xx_it.c **** 
 174:Src/stm32f0xx_it.c **** /**
 175:Src/stm32f0xx_it.c ****   * @brief This function handles USB global Interrupt / USB wake-up interrupt through EXTI line 18.
 176:Src/stm32f0xx_it.c ****   */
 177:Src/stm32f0xx_it.c **** void USB_IRQHandler(void)
 178:Src/stm32f0xx_it.c **** {
 174              		.loc 1 178 0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cchibEtC.s 			page 7


 178 0000 10B5     		push	{r4, lr}
 179              	.LCFI2:
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 179:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 0 */
 180:Src/stm32f0xx_it.c **** 
 181:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 0 */
 182:Src/stm32f0xx_it.c ****   HAL_PCD_IRQHandler(&hpcd_USB_FS);
 183              		.loc 1 182 0
 184 0002 0248     		ldr	r0, .L11
 185 0004 FFF7FEFF 		bl	HAL_PCD_IRQHandler
 186              	.LVL3:
 183:Src/stm32f0xx_it.c ****   /* USER CODE BEGIN USB_IRQn 1 */
 184:Src/stm32f0xx_it.c **** 
 185:Src/stm32f0xx_it.c ****   /* USER CODE END USB_IRQn 1 */
 186:Src/stm32f0xx_it.c **** }
 187              		.loc 1 186 0
 188              		@ sp needed
 189 0008 10BD     		pop	{r4, pc}
 190              	.L12:
 191 000a C046     		.align	2
 192              	.L11:
 193 000c 00000000 		.word	hpcd_USB_FS
 194              		.cfi_endproc
 195              	.LFE43:
 197              		.text
 198              	.Letext0:
 199              		.file 2 "/usr/arm-none-eabi/include/machine/_default_types.h"
 200              		.file 3 "/usr/arm-none-eabi/include/sys/_stdint.h"
 201              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/system_stm32f0xx.h"
 202              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f070x6.h"
 203              		.file 6 "/usr/arm-none-eabi/include/sys/lock.h"
 204              		.file 7 "/usr/arm-none-eabi/include/sys/_types.h"
 205              		.file 8 "/usr/lib/gcc/arm-none-eabi/7.3.1/include/stddef.h"
 206              		.file 9 "/usr/arm-none-eabi/include/sys/reent.h"
 207              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 208              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 209              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_pcd.h"
 210              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 211              		.file 14 "Inc/main.h"
 212              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/cchibEtC.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f0xx_it.c
     /tmp/cchibEtC.s:16     .text.NMI_Handler:0000000000000000 $t
     /tmp/cchibEtC.s:23     .text.NMI_Handler:0000000000000000 NMI_Handler
     /tmp/cchibEtC.s:38     .text.HardFault_Handler:0000000000000000 $t
     /tmp/cchibEtC.s:45     .text.HardFault_Handler:0000000000000000 HardFault_Handler
     /tmp/cchibEtC.s:59     .text.SVC_Handler:0000000000000000 $t
     /tmp/cchibEtC.s:66     .text.SVC_Handler:0000000000000000 SVC_Handler
     /tmp/cchibEtC.s:80     .text.PendSV_Handler:0000000000000000 $t
     /tmp/cchibEtC.s:87     .text.PendSV_Handler:0000000000000000 PendSV_Handler
     /tmp/cchibEtC.s:101    .text.SysTick_Handler:0000000000000000 $t
     /tmp/cchibEtC.s:108    .text.SysTick_Handler:0000000000000000 SysTick_Handler
     /tmp/cchibEtC.s:129    .text.TIM3_IRQHandler:0000000000000000 $t
     /tmp/cchibEtC.s:136    .text.TIM3_IRQHandler:0000000000000000 TIM3_IRQHandler
     /tmp/cchibEtC.s:160    .text.TIM3_IRQHandler:0000000000000010 $d
     /tmp/cchibEtC.s:165    .text.USB_IRQHandler:0000000000000000 $t
     /tmp/cchibEtC.s:172    .text.USB_IRQHandler:0000000000000000 USB_IRQHandler
     /tmp/cchibEtC.s:193    .text.USB_IRQHandler:000000000000000c $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_TIM_IRQHandler
pixel
htim3
HAL_PCD_IRQHandler
hpcd_USB_FS
